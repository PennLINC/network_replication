knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
require(ggplot2)
library(cowplot)
library(cifti)
library(ggseg)
Sys.setenv(RGL_USE_NULL=TRUE)
library(ggsegExtra)
library(ggsegSchaefer)
library(ggcorrplot)
library(viridis)
library(scales)
library(stringr)
library(tidyr)
# load SNR mask
SNRmask_schaefer200 <- read.csv('/cbica/projects/network_replication/atlases/Masks/SNRmask_schaefer200x7_reordered.csv')
# load region list
schaefer200.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200_7Network_regionlist_reordered.csv", header = T) #schaefer parcel names in order of surface data
names(schaefer200.parcel.labels)[2] <- "label"
schaefer200.parcel.labels[which(SNRmask_schaefer200 == 0),] <- NA # apply SNR mask to parcel names
schaefer200.parcel.labels <- na.omit(schaefer200.parcel.labels)
# load parcellated SA axis
schaefer200_SAaxis_cifti <- read_cifti("/cbica/projects/network_replication/SAaxis/SensorimotorAssociation_Axis_parcellated/SensorimotorAssociation.Axis.Schaefer200.7Networks.pscalar.nii")
schaefer200_SAaxis <- as.data.frame(cbind(rank(schaefer200_SAaxis_cifti$data), names(schaefer200_SAaxis_cifti$Parcel)))
colnames(schaefer200_SAaxis) <- c("SA.axis_rank","label")
# reorder SA axis (7 to 17)
index_schaefer200x7to17 <- read.csv("/cbica/projects/network_replication/software/schaefer7to17_reordering/index_schaefer200x7to17.csv", header=F)
index_schaefer200x7to17$V1 <- as.numeric(index_schaefer200x7to17$V1)
schaefer200_SAaxis <-schaefer200_SAaxis[index_schaefer200x7to17$V1,]
#as.matrix(cbind(schaefer200_SAaxis, schaefer200.parcel.labels))
# apply SNR mask
schaefer200_SAaxis[which(SNRmask_schaefer200 == 0),] <- NA
schaefer200_SAaxis <- na.omit(schaefer200_SAaxis)
schaefer200.parcel.labels
# load region list
schaefer200.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200_7Network_regionlist_reordered.csv", header = T) #schaefer parcel names in order of surface data
schaefer200.parcel.labels
SNRmask_schaefer200
# load parcellated SA axis
schaefer200_SAaxis_cifti <- read_cifti("/cbica/projects/network_replication/SAaxis/SensorimotorAssociation_Axis_parcellated/SensorimotorAssociation.Axis.Schaefer200.7Networks.pscalar.nii")
schaefer200_SAaxis_cifti
names(schaefer200_SAaxis_cifti$Parcel)
# load region list
schaefer200.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200_7Network_regionlist_reordered.csv", header = T) #schaefer parcel names in order of surface data
identical(names(schaefer200_SAaxis_cifti$Parcel), schaefer200.parcel.labels)
cbind(names(schaefer200_SAaxis_cifti$Parcel), schaefer200.parcel.labels)
as.matrix*cbind(names(schaefer200_SAaxis_cifti$Parcel), schaefer200.parcel.labels$x))
as.matrix(cbind(names(schaefer200_SAaxis_cifti$Parcel), schaefer200.parcel.labels$x))
SNRmask_schaefer200 <- read.csv('/cbica/projects/network_replication/atlases/Masks/SNRmask_schaefer200x7_reordered.csv')
# load region list
schaefer200.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200_7Network_regionlist_reordered.csv", header = T) #schaefer parcel names in order of surface data
names(schaefer200.parcel.labels)[2] <- "label"
schaefer200.parcel.labels[which(SNRmask_schaefer200 == 0),] <- NA # apply SNR mask to parcel names
schaefer200.parcel.labels <- na.omit(schaefer200.parcel.labels)
# load parcellated SA axis
schaefer200_SAaxis_cifti <- read_cifti("/cbica/projects/network_replication/SAaxis/SensorimotorAssociation_Axis_parcellated/SensorimotorAssociation.Axis.Schaefer200.7Networks.pscalar.nii")
schaefer200_SAaxis <- as.data.frame(cbind(rank(schaefer200_SAaxis_cifti$data), names(schaefer200_SAaxis_cifti$Parcel)))
colnames(schaefer200_SAaxis) <- c("SA.axis_rank","label")
# reorder SA axis (7 to 17)
index_schaefer200x7to17 <- read.csv("/cbica/projects/network_replication/software/schaefer7to17_reordering/index_schaefer200x7to17.csv", header=F)
index_schaefer200x7to17$V1 <- as.numeric(index_schaefer200x7to17$V1)
schaefer200_SAaxis <-schaefer200_SAaxis[index_schaefer200x7to17$V1,]
#as.matrix(cbind(schaefer200_SAaxis, schaefer200.parcel.labels))
# apply SNR mask
schaefer200_SAaxis[which(SNRmask_schaefer200 == 0),] <- NA
schaefer200_SAaxis <- na.omit(schaefer200_SAaxis)
as.matrix(cbind(names(schaefer200_SAaxis_cifti$Parcel), schaefer200.parcel.labels$x))
names(schaefer200_SAaxis_cifti$Parcel)
as.matrix(cbind(schaefer200_SAaxis$label, schaefer200.parcel.labels$x))
cbind(schaefer200_SAaxis$label, schaefer200.parcel.labels$x)
schaefer200.parcel.labels$x
cbind(schaefer200_SAaxis$label, schaefer200.parcel.labels$label)
# reorder ggseg region list
schaefer200x7_ggseg <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200_7Network_ggseg_regionlist.csv")
schaefer200x7_ggseg
index_schaefer200x7to17 <- read.csv("/cbica/projects/network_replication/software/schaefer7to17_reordering/index_schaefer200x7to17.csv", header=F)
View(schaefer200x7_ggseg)
schaefer200x7_ggseg
schaefer200x7_ggseg <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200_7Network_ggseg_regionlist.csv")
index_schaefer200x7to17 <- read.csv("/cbica/projects/network_replication/software/schaefer7to17_reordering/index_schaefer200x7to17.csv", header=F)
index_schaefer200x7to17$V1 <- as.numeric(index_schaefer200x7to17$V1)
schaefer200x7_ggseg_reordered <-schaefer200x7_ggseg$region[index_schaefer200x7to17$V1]
as.matrix(cbind(schaefer200x7_reordered, schaefer200x7_ggseg$region))
schaefer200x7_ggseg_reordered
schaefer200x7.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200_7Network_regionlist.csv", header = F)
schaefer200x17.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200x17_regionlist.csv", header = T)
schaefer200x7.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200_7Network_regionlist.csv", header = F)
schaefer200x17.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200x17_regionlist.csv", header = T)
# want to put schaefer200x7 in the same order as schaefer200x17
# then i think i can do the SNR mask? and other stuff?
index_schaefer200x7to17 <- read.csv("/cbica/projects/network_replication/software/schaefer7to17_reordering/index_schaefer200x7to17.csv", header=F)
index_schaefer200x7to17$V1 <- as.numeric(index_schaefer200x7to17$V1)
schaefer200x7_reordered <-schaefer200x7.parcel.labels$V1[index_schaefer200x7to17$V1]
schaefer200x7_ggseg <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200_7Network_ggseg_regionlist.csv")
index_schaefer200x7to17 <- read.csv("/cbica/projects/network_replication/software/schaefer7to17_reordering/index_schaefer200x7to17.csv", header=F)
index_schaefer200x7to17$V1 <- as.numeric(index_schaefer200x7to17$V1)
schaefer200x7_ggseg_reordered <- schaefer200x7_ggseg$region[index_schaefer200x7to17$V1]
schaefer200x7_ggseg_reordered
as.matrix(cbind(schaefer200x7_reordered, schaefer200x7_ggseg$region))
as.matrix(cbind(schaefer200x7_reordered, schaefer200x7_ggseg_reordered$region))
schaefer200x7_ggseg_reordered
as.matrix(cbind(schaefer200x7_reordered, schaefer200x7_ggseg_reordered))
as.matrix(cbind(schaefer200x7_reordered, schaefer200x7_ggseg_reordered))
write.csv(schaefer200x7_ggseg_reordered, "/cbica/projects/network_replication/atlases/parcellations/schaefer200x7_ggseg_reordered.csv")
# reorder parcel labels
schaefer400x7.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer400_7Network_regionlist.csv", header = F)
schaefer400x17.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer400x17_regionlist.csv", header = T)
# want to put schaefer400x7 in the same order as schaefer400x17
# then i think i can do the SNR mask? and other stuff?
index_schaefer400x7to17 <- read.csv("/cbica/projects/network_replication/software/schaefer7to17_reordering/index_schaefer400x7to17.csv", header=F)
index_schaefer400x7to17$V1 <- as.numeric(index_schaefer400x7to17$V1)
schaefer400x7_reordered <-schaefer400x7.parcel.labels$V1[index_schaefer400x7to17$V1]
as.matrix(cbind(schaefer400x7_reordered, schaefer400x17.parcel.labels))
#write.csv(schaefer400x7_reordered, "/cbica/projects/network_replication/atlases/parcellations/schaefer400_7Network_regionlist_reordered.csv")
# reorder community affiliation
schaefer400x7_communityAffil <- read.csv("/cbica/projects/network_replication/atlases/parcellations/Schaefer_7Network/schaefer400x7CommunityAffiliation.1D.csv", header=F)
schaefer400x7_communityAffil_reordered <-schaefer400x7_communityAffil$V1[index_schaefer400x7to17$V1]
#write.csv(schaefer400x7_communityAffil_reordered, "/cbica/projects/network_replication/atlases/parcellations/Schaefer_7Network/schaefer400x7CommunityAffiliation.1D_reordered.csv")
# reorder spherical coordinates
schaefer400x7_coords <- read.csv("/cbica/projects/network_replication/software/rotate_parcellation/Schaefer2018_200Parcels_7Networks_order_FSLMNI152_1mm.Centroid_RAS.csv", header=TRUE)
schaefer400x7_coords_reordered <-schaefer400x7_coords[index_schaefer400x7to17$V1,]
#write.csv(schaefer400x7_coords_reordered, "/cbica/projects/network_replication/software/rotate_parcellation/Schaefer2018_400Parcels_7Networks_order_FSLMNI152_1mm.Centroid_RAS_reordered.csv")
write.csv(schaefer400x7_ggseg_reordered, "/cbica/projects/network_replication/atlases/parcellations/schaefer400x7_ggseg_reordered.csv")
# reorder ggseg region list
schaefer400x7_ggseg <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer400_7Network_ggseg_regionlist.csv")
index_schaefer400x7to17 <- read.csv("/cbica/projects/network_replication/software/schaefer7to17_reordering/index_schaefer400x7to17.csv", header=F)
index_schaefer400x7to17$V1 <- as.numeric(index_schaefer400x7to17$V1)
schaefer400x7_ggseg_reordered <- schaefer400x7_ggseg$region[index_schaefer400x7to17$V1]
as.matrix(cbind(schaefer400x7_reordered, schaefer400x7_ggseg_reordered))
write.csv(schaefer400x7_ggseg_reordered, "/cbica/projects/network_replication/atlases/parcellations/schaefer400x7_ggseg_reordered.csv")
schaefer200x7_ggseg_reordered
cbind(schaefer200_SAaxis$label, schaefer200x7_ggseg_reordered)
# load SNR mask
SNRmask_schaefer200 <- read.csv('/cbica/projects/network_replication/atlases/Masks/SNRmask_schaefer200x7_reordered.csv')
# load region list
schaefer200.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200_7Network_regionlist_reordered.csv", header = T) #schaefer parcel names in order of surface data
names(schaefer200.parcel.labels)[2] <- "label"
schaefer200.parcel.labels[which(SNRmask_schaefer200 == 0),] <- NA # apply SNR mask to parcel names
schaefer200.parcel.labels <- na.omit(schaefer200.parcel.labels)
# load parcellated SA axis
schaefer200_SAaxis_cifti <- read_cifti("/cbica/projects/network_replication/SAaxis/SensorimotorAssociation_Axis_parcellated/SensorimotorAssociation.Axis.Schaefer200.7Networks.pscalar.nii")
schaefer200_SAaxis <- as.data.frame(cbind(rank(schaefer200_SAaxis_cifti$data), names(schaefer200_SAaxis_cifti$Parcel)))
colnames(schaefer200_SAaxis) <- c("SA.axis_rank","label")
# reorder SA axis (7 to 17)
index_schaefer200x7to17 <- read.csv("/cbica/projects/network_replication/software/schaefer7to17_reordering/index_schaefer200x7to17.csv", header=F)
index_schaefer200x7to17$V1 <- as.numeric(index_schaefer200x7to17$V1)
schaefer200_SAaxis <-schaefer200_SAaxis[index_schaefer200x7to17$V1,]
#as.matrix(cbind(schaefer200_SAaxis, schaefer200.parcel.labels))
# apply SNR mask
schaefer200_SAaxis[which(SNRmask_schaefer200 == 0),] <- NA
schaefer200_SAaxis <- na.omit(schaefer200_SAaxis)
cbind(schaefer200_SAaxis$label, schaefer200x7_ggseg_reordered)
schaefer200_SAaxis_cifti <- read_cifti("/cbica/projects/network_replication/SAaxis/SensorimotorAssociation_Axis_parcellated/SensorimotorAssociation.Axis.Schaefer200.7Networks.pscalar.nii")
schaefer200_SAaxis <- as.data.frame(cbind(rank(schaefer200_SAaxis_cifti$data), names(schaefer200_SAaxis_cifti$Parcel)))
colnames(schaefer200_SAaxis) <- c("SA.axis_rank","label")
# reorder SA axis (7 to 17)
index_schaefer200x7to17 <- read.csv("/cbica/projects/network_replication/software/schaefer7to17_reordering/index_schaefer200x7to17.csv", header=F)
index_schaefer200x7to17$V1 <- as.numeric(index_schaefer200x7to17$V1)
schaefer200_SAaxis <-schaefer200_SAaxis[index_schaefer200x7to17$V1,]
#as.matrix(cbind(schaefer200_SAaxis, schaefer200.parcel.labels))
cbind(schaefer200_SAaxis$label, schaefer200x7_ggseg_reordered)
identical(schaefer200_SAaxis$label, schaefer200x7_ggseg_reordered)
knitr::opts_chunk$set(echo = TRUE)
library(ciftiTools)
ciftiTools.setOption('wb_path', '/Applications/workbench/')
library(gifti)
library(cifti)
Sys.setenv(RGL_USE_NULL=TRUE)
library(ggseg)
library(ggsegExtra)
library(ggsegGlasser)
library(ggsegSchaefer)
library(viridis)
require(ggplot2)
library(dplyr)
schaefer200.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200x7_ggseg_reordered.csv", header = T)
schaefer200.communityAffil <- read.csv("/cbica/projects/network_replication/atlases/parcellations/Schaefer_7Network/schaefer200x7CommunityAffiliation.1D_reordered.csv", header=T)
schaefer200.parcel.labels <- as.data.frame(cbind(schaefer200.parcel.labels$x, schaefer200.communityAffil$x))
names(schaefer200.parcel.labels) <- c("label", "network")
#  make dataframe where rownames are the commAffil number, and then need to transpose V1 to be rows
schaefer200x7_rows <- as.data.frame(t(schaefer200.parcel.labels$network))
schaefer200x7_commAffil_mat <- as.data.frame(schaefer200x7_rows[rep(seq_len(nrow(schaefer200x7_rows)), each = 200), ])
rownames(schaefer200x7_commAffil_mat) <- NULL
SNRmask_schaefer200x7 <- read.csv('/cbica/projects/network_replication/atlases/Masks/SNRmask_schaefer200x7_reordered.csv') # this is just the SNRmask for schaefer200x17
# computeBNC(rbcid, "schaefer200", schaefer200x7_commAffil_mat, schaefer200.parcel.labels$network)
computeBNC <- function(rbcid, atlas, community_affiliation_mat, network_assignment){
#read in connectivity matrix
if(atlas == "schaefer200"){
connect.matrix <- read_cifti(sprintf("/cbica/projects/network_replication/pconn/%1$s/%1$s_ses-PNC1_task-rest_acq-singleband_space-fsLR_atlas-Schaefer217_den-91k_den-91k_bold.pconn.nii",rbcid))
mask <- SNRmask_schaefer200x7} #200 x 200 matrix
# set rows and columns corresponding to parcel # in mask to NA
connect.matrix$data[which(mask == 0), ] <- NA
connect.matrix$data[,which(mask == 0)] <- NA
#compute average between-network connectivity
BNC <- c()
for (i in 1:nrow(connect.matrix$data)) {
between_network_values <- c()
BNC_per_node <- c()
for (j in 1:length(connect.matrix$data[i,])) {  # entire  row
if(is.na(connect.matrix$data[i,j]) || connect.matrix$data[i,j] == 1) { # add NA if excluded by mask or identity
between_network_values <- append(between_network_values, NA);
} else if (schaefer200.parcel.labels$network[i] != schaefer200x7_commAffil_mat[i,j]) {
between_network_values <- append(between_network_values, connect.matrix$data[i,j])
} else if (schaefer200.parcel.labels$network[i] == schaefer200x7_commAffil_mat[i,j]) {
between_network_values <- append(between_network_values, NA)
}
}
#print(between_network_values)
BNC_per_node <- append(BNC_per_node, mean(between_network_values, na.rm=TRUE))
#print(BNC_per_node) # 1 value
BNC <- append(BNC, BNC_per_node)
}
return(BNC)
}
participants <- read.csv('/cbica/projects/network_replication/adapted_Rscripts/participants_allIDs.csv')
subs_no_files <- read.csv('/cbica/projects/network_replication/adapted_Rscripts/subs_no_files.csv', row.names=NULL)
subs_no_files <- subs_no_files[,2]
BNC.subxparcel.matrix.schaefer200 <- matrix(data = NA, nrow = nrow(participants), ncol = 201)
regionheaders <- as.character(schaefer200.parcel.labels$label)
demoheaders <- c("rbcid")
colheaders <- as.matrix(c(demoheaders,regionheaders))
colnames(BNC.subxparcel.matrix.schaefer200) <- colheaders
#compute BNC for each subject
for(sub in c(1:nrow(participants))){
rbcid=as.character(participants[sub,4])
if(rbcid %in% subs_no_files){
next
}
else {
rbcid.data.schaefer200 <- computeBNC(rbcid, "schaefer200", schaefer200x7_commAffil_mat, schaefer200.parcel.labels$network)
BNC.subxparcel.matrix.schaefer200[sub,] <- cbind(rbcid, t(rbcid.data.schaefer200))
print(paste(sub, rbcid, "schaefer200"))
}
}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
require(ggplot2)
library(cowplot)
library(cifti)
library(ggseg)
Sys.setenv(RGL_USE_NULL=TRUE)
library(ggsegExtra)
library(ggsegSchaefer)
library(ggcorrplot)
library(viridis)
library(scales)
library(stringr)
library(tidyr)
knitr::opts_chunk$set(echo = TRUE)
library(ciftiTools)
ciftiTools.setOption('wb_path', '/Applications/workbench/')
library(gifti)
library(cifti)
Sys.setenv(RGL_USE_NULL=TRUE)
library(ggseg)
library(ggsegExtra)
library(ggsegGlasser)
library(ggsegSchaefer)
library(viridis)
require(ggplot2)
library(dplyr)
schaefer200.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200x7_ggseg_reordered.csv", header = T)
schaefer200.communityAffil <- read.csv("/cbica/projects/network_replication/atlases/parcellations/Schaefer_7Network/schaefer200x7CommunityAffiliation.1D_reordered.csv", header=T)
schaefer200.parcel.labels <- as.data.frame(cbind(schaefer200.parcel.labels$x, schaefer200.communityAffil$x))
names(schaefer200.parcel.labels) <- c("label", "network")
#  make dataframe where rownames are the commAffil number, and then need to transpose V1 to be rows
schaefer200x7_rows <- as.data.frame(t(schaefer200.parcel.labels$network))
schaefer200x7_commAffil_mat <- as.data.frame(schaefer200x7_rows[rep(seq_len(nrow(schaefer200x7_rows)), each = 200), ])
rownames(schaefer200x7_commAffil_mat) <- NULL
SNRmask_schaefer200x7 <- read.csv('/cbica/projects/network_replication/atlases/Masks/SNRmask_schaefer200x7_reordered.csv') # this is just the SNRmask for schaefer200x17
# computeBNC(rbcid, "schaefer200", schaefer200x7_commAffil_mat, schaefer200.parcel.labels$network)
computeBNC <- function(rbcid, atlas, community_affiliation_mat, network_assignment){
#read in connectivity matrix
if(atlas == "schaefer200"){
connect.matrix <- read_cifti(sprintf("/cbica/projects/network_replication/pconn/%1$s/%1$s_ses-PNC1_task-rest_acq-singleband_space-fsLR_atlas-Schaefer217_den-91k_den-91k_bold.pconn.nii",rbcid))
mask <- SNRmask_schaefer200x7} #200 x 200 matrix
# set rows and columns corresponding to parcel # in mask to NA
connect.matrix$data[which(mask == 0), ] <- NA
connect.matrix$data[,which(mask == 0)] <- NA
#compute average between-network connectivity
BNC <- c()
for (i in 1:nrow(connect.matrix$data)) {
between_network_values <- c()
BNC_per_node <- c()
for (j in 1:length(connect.matrix$data[i,])) {  # entire  row
if(is.na(connect.matrix$data[i,j]) || connect.matrix$data[i,j] == 1) { # add NA if excluded by mask or identity
between_network_values <- append(between_network_values, NA);
} else if (schaefer200.parcel.labels$network[i] != schaefer200x7_commAffil_mat[i,j]) {
between_network_values <- append(between_network_values, connect.matrix$data[i,j])
} else if (schaefer200.parcel.labels$network[i] == schaefer200x7_commAffil_mat[i,j]) {
between_network_values <- append(between_network_values, NA)
}
}
#print(between_network_values)
BNC_per_node <- append(BNC_per_node, mean(between_network_values, na.rm=TRUE))
#print(BNC_per_node) # 1 value
BNC <- append(BNC, BNC_per_node)
}
return(BNC)
}
participants <- read.csv('/cbica/projects/network_replication/adapted_Rscripts/participants_allIDs.csv')
subs_no_files <- read.csv('/cbica/projects/network_replication/adapted_Rscripts/subs_no_files.csv', row.names=NULL)
subs_no_files <- subs_no_files[,2]
BNC.subxparcel.matrix.schaefer200 <- matrix(data = NA, nrow = nrow(participants), ncol = 201)
regionheaders <- as.character(schaefer200.parcel.labels$label)
demoheaders <- c("rbcid")
colheaders <- as.matrix(c(demoheaders,regionheaders))
colnames(BNC.subxparcel.matrix.schaefer200) <- colheaders
#compute BNC for each subject
for(sub in c(1:nrow(participants))){
rbcid=as.character(participants[sub,4])
if(rbcid %in% subs_no_files){
next
}
else {
rbcid.data.schaefer200 <- computeBNC(rbcid, "schaefer200", schaefer200x7_commAffil_mat, schaefer200.parcel.labels$network)
BNC.subxparcel.matrix.schaefer200[sub,] <- cbind(rbcid, t(rbcid.data.schaefer200))
print(paste(sub, rbcid, "schaefer200"))
}
}
