knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
require(ggplot2)
library(cowplot)
library(cifti)
library(ggseg)
Sys.setenv(RGL_USE_NULL=TRUE)
library(ggsegExtra)
library(ggsegSchaefer)
library(ggcorrplot)
library(viridis)
library(scales)
library(stringr)
library(tidyr)
# load SNR mask
SNRmask_schaefer200 <- read.csv('/cbica/projects/network_replication/atlases/Masks/SNRmask_schaefer200x7.csv')
# load region list
schaefer200.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200_7Network_ggseg_regionlist.csv", header = T)
names(schaefer200.parcel.labels)[2:3] <- c("label", "network")
schaefer200.parcel.labels[which(SNRmask_schaefer200 == 0),] <- NA # apply SNR mask to parcel names
schaefer200.parcel.labels <- na.omit(schaefer200.parcel.labels)
schaefer200.parcel.labels$label <- gsub("7Networks_", "", schaefer200.parcel.labels$label)
# load parcellated SA axis
schaefer200_SAaxis_cifti <- read_cifti("/cbica/projects/network_replication/SAaxis/SensorimotorAssociation_Axis_parcellated/SensorimotorAssociation.Axis.Schaefer200.7Networks.pscalar.nii")
schaefer200_SAaxis <- as.data.frame(cbind(rank(schaefer200_SAaxis_cifti$data), names(schaefer200_SAaxis_cifti$Parcel)))
colnames(schaefer200_SAaxis) <- c("SA.axis_rank","label")
# apply SNR mask
schaefer200_SAaxis[which(SNRmask_schaefer200 == 0),] <- NA
schaefer200_SAaxis <- na.omit(schaefer200_SAaxis)
schaefer200_SAaxis$label <- gsub("7Networks_", "", schaefer200_SAaxis$label)
## GAM Results
gam.WNC.age.schaefer200 <- read.csv("/Users/audluo/cbica/projects/network_replication/WNC/GAM/GAMresults.WNC.age.schaefer200x7.csv")
gam.WNC.age.schaefer200 <- gam.WNC.age.schaefer200 %>% select(-label)
gam.WNC.age.schaefer200$label <- schaefer200_SAaxis$label
gam.smooths.schaefer200 <- read.csv("/Users/audluo/cbica/projects/network_replication/WNC/GAM/GAMsmoothfits.WNC.age.schaefer200x7.csv")
knitr::opts_chunk$set(echo = TRUE)
library(ciftiTools)
ciftiTools.setOption('wb_path', '/Applications/workbench/')
library(gifti)
library(cifti)
Sys.setenv(RGL_USE_NULL=TRUE)
library(ggseg)
library(ggsegExtra)
library(ggsegGlasser)
library(ggsegSchaefer)
library(viridis)
require(ggplot2)
library(dplyr)
schaefer200.parcel.labels <- read.csv("/cbica/projects/network_replication/atlases/parcellations/schaefer200x17_regionlist.csv", header = T)
schaefer200.communityAffil <- read.csv("/cbica/projects/network_replication/atlases/parcellations/Schaefer_17Network/schaefer200x17CommunityAffiliation.1D .csv", header=F)
schaefer200.parcel.labels <- as.data.frame(cbind(schaefer200.parcel.labels$x, schaefer200.communityAffil$V1))
names(schaefer200.parcel.labels) <- c("label", "network")
#  make dataframe where rownames are the commAffil number, and then need to transpose V1 to be rows
schaefer200x17_rows <- as.data.frame(t(schaefer200.parcel.labels$network))
schaefer200x17_commAffil_mat <- as.data.frame(schaefer200x17_rows[rep(seq_len(nrow(schaefer200x17_rows)), each = 200), ])
rownames(schaefer200x17_commAffil_mat) <- NULL
schaefer200x17_commAffil_mat
SNRmask_schaefer200 <- read.csv('/cbica/projects/network_replication/atlases/Masks/SNRmask_schaefer200x17.csv')
# computeWNC(rbcid, "schaefer200", schaefer200x17_commAffil_mat, schaefer200.parcel.labels$network)
computeWNC <- function(rbcid, atlas, community_affiliation_mat, network_assignment){
#read in connectivity matrix
if(atlas == "schaefer200"){
connect.matrix <- read_cifti(sprintf("/cbica/projects/network_replication/pconn/%1$s/%1$s_ses-PNC1_task-rest_acq-singleband_space-fsLR_atlas-Schaefer217_den-91k_den-91k_bold.pconn.nii",rbcid))
mask <- SNRmask_schaefer200} #200 x 200 matrix
# set rows and columns corresponding to parcel # in mask to NA
connect.matrix$data[which(mask == 0), ] <- NA
connect.matrix$data[,which(mask == 0)] <- NA
#compute average within-network connectivity
WNC <- c()
for (i in 1:nrow(connect.matrix$data)) {
within_network_values <- c()
WNC_per_node <- c()
for (j in 1:length(connect.matrix$data[i,])) {  # entire  row
if(is.na(connect.matrix$data[i,j]) || connect.matrix$data[i,j] == 1) { # add NA if excluded by mask or identity
within_network_values <- append(within_network_values, NA);
} else if (schaefer200.parcel.labels$network[i] == schaefer200x17_commAffil_mat[i,j]) {
within_network_values <- append(within_network_values, connect.matrix$data[i,j])
} else if (schaefer200.parcel.labels$network[i] != schaefer200x17_commAffil_mat[i,j]) {
within_network_values <- append(within_network_values, NA)
}
}
#print(within_network_values)
WNC_per_node <- append(WNC_per_node, mean(within_network_values, na.rm=TRUE))
#print(WNC_per_node) # 1 value
WNC <- append(WNC, WNC_per_node)
}
return(WNC)
}
participants <- read.csv('/cbica/projects/network_replication/adapted_Rscripts/participants_allIDs.csv')
subs_no_files <- read.csv('/cbica/projects/network_replication/adapted_Rscripts/subs_no_files.csv', row.names=NULL)
subs_no_files <- subs_no_files[,2]
WNC.subxparcel.matrix.schaefer200 <- matrix(data = NA, nrow = nrow(participants), ncol = 201)
regionheaders <- as.character(schaefer200.parcel.labels$label)
demoheaders <- c("rbcid")
colheaders <- as.matrix(c(demoheaders,regionheaders))
colnames(WNC.subxparcel.matrix.schaefer200) <- colheaders
#compute WNC for each subject
for(sub in c(1:nrow(participants))){
rbcid=as.character(participants[sub,4])
if(rbcid %in% subs_no_files){
next
}
else {
rbcid.data.schaefer200 <- computeWNC(rbcid, "schaefer200", schaefer200x17_commAffil_mat, schaefer200.parcel.labels$network)
WNC.subxparcel.matrix.schaefer200[sub,] <- cbind(rbcid, t(rbcid.data.schaefer200))
print(paste(sub, rbcid, "schaefer200"))
}
}
