library(cifti)
# look at timeseries
cifti_rest <- read_cifti("/cbica/projects/network_replication/input/HCPD/xcp/xcp_d/sub-2996590/ses-V1/func/sub-2996590_ses-V1_task-rest_dir-PA_run-04_space-fsLR_atlas-Schaefer217_den-91k_timeseries.ptseries.nii")
dim(cifti_rest$data)
cifti_guessing <- read_cifti("/cbica/projects/network_replication/input/HCPD/xcp/xcp_d/sub-2996590/ses-V1/func/sub-2996590_ses-V1_task-guessing_dir-PA_run-04_space-fsLR_atlas-Schaefer217_den-91k_timeseries.ptseries.nii")
cifti_guessing <- read_cifti("/cbica/projects/network_replication/input/HCPD/xcp/xcp_d/sub-2996590/ses-V1/func/sub-2996590_ses-V1_task-guessing_dir-PA_run-02_space-fsLR_atlas-Schaefer217_den-91k_timeseries.ptseries.nii")
dim(cifti_guessing$data)
dim(cifti_rest$data)
cifti_guessing$data
dim(cifti_guessing$data)
cifti_guessing <- t(cifti_guessing)
cifti_rest <- t(cifti_rest)
dim(cifti_guessing$data) # 200 parcels, 270 timepoints
cifti_rest <- read_cifti("/cbica/projects/network_replication/input/HCPD/xcp/xcp_d/sub-2996590/ses-V1/func/sub-2996590_ses-V1_task-rest_dir-PA_run-04_space-fsLR_atlas-Schaefer217_den-91k_timeseries.ptseries.nii")
cifti_rest <- t(cifti_rest$data)
cifti_guessing <- read_cifti("/cbica/projects/network_replication/input/HCPD/xcp/xcp_d/sub-2996590/ses-V1/func/sub-2996590_ses-V1_task-guessing_dir-PA_run-02_space-fsLR_atlas-Schaefer217_den-91k_timeseries.ptseries.nii")
cifti_guessing <- t(cifti_guessing$data)
dim(cifti_rest$data)
dim(cifti_rest)
dim(cifti_guessing)
rbind(cifti_rest, cifti_guessing)
nrow(cifti_rest)
nrow(cifti_guessing)
library(dplyr)
library(tidyverse)
library(magrittr)
library(reshape)
library(reshape2)
library(MASS)
library(stargazer)
library(cifti)
hcpd_demog
str_detect(hcpd_demog$src_subject_id, "2996590")
which(str_detect(hcpd_demog$src_subject_id, "2996590"))
hcpd_demog$src_subject_id[652]
hcpd_demog[652,]
hcpd_demog
hcpd_demog$visit
levels(hcpd_demog$visit)
levels(as.factor(hcpd_demog$visit))
which(str_detect(hcpd_demog$src_subject_id, "0001305"))
hcpd_demog[1,]
hcpd_demog$RS.fMRI_Count
NKI_filepaths  <- readRDS("/cbica/projects/network_replication/NKI/NKI_qc_CIFTI_filepaths_20220921.RData")
NKI_filepaths  <- readRDS("/cbica/projects/network_replication/input/NKI/NKI_qc_CIFTI_filepaths_20220921.RData")
NKI_filepaths
test <- readRDS("/cbica/projects/network_replication/input/NKI/connMatricesData/cifti_lists/A00077574_BAS1.RData")
test
hcpd_demog
hcp_demog$hcpd_demog
hcp_demog$tMRI_CARIT_PctCompl
hcpd_demog$src_subject_id
i=1
str_extract(hcpd_demog$src_subject_id[i], "\d*")
subject <- str_extract(hcpd_demog$src_subject_id[i], "[0-9]*")
subject
str_extract(hcpd_demog$src_subject_id[i], "[0-9]")
str_extract(hcpd_demog$src_subject_id[i], "[0-9](*)")
str_extract(hcpd_demog$src_subject_id[i], "[0-9]+")
paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
atlases
atlases <- c("Glasser", "Gordon", "Schaefer217", "Schaefer417")
atlas_names <- c(rep(atlases, 16))
atlas_names
subject = "sub-0001305"
list.files(paste0("/cbica/project/network_replication/input/HCPD/hcpd_xcp/", subject))
paste0("/cbica/project/network_replication/input/HCPD/hcpd_xcp/", subject)
list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
View(x)
k=1
files
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
str_extract(files[k], "task-[a-z]+_")
str_extract(files[k], "task-[a-z]+")
i=8
k=2
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
str_extract(files[k], "task-[a-z]+")
j=15
str_extract(files[j], "task-[a-z]+")
j=34
str_extract(files[j], "task-[a-z]+")
str_extract(files[j], "dir[a-z]2")
str_extract(files[j], "dir-[A-Z]2")
str_extract(files[j], "dir-[A-Z]{2}")
str_extract(files[j], "atlas-[a-zA-Z0-9]+")
j
j=35
str_extract(files[j], "atlas-[a-zA-Z0-9]+")
for (i in c(1:nrow(hcpd_demog))) {
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
for (j in c(1:length(files))){
task <- gsub("task-",str_extract(files[j], "task-[a-z]+"))
direction <- gsub("dir-", str_extract(files[j], "dir-[A-Z]{2}"))
atlas <- gsub("atlas-", str_extract(files[j], "atlas-[a-zA-Z0-9]+"))
task_list <- append(task, task_list)
direction_list <- append(direction, direction_list)
atlas_list <- append(atlas, atlas_list)
}
subject_list <- append(subject, subject_list)
ptseries_filenames <- append(files, ptseries_filenames)
}
i
j
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
for (j in c(1:length(files))){
task <- gsub("task-",str_extract(files[j], "task-[a-z]+"))
direction <- gsub("dir-", str_extract(files[j], "dir-[A-Z]{2}"))
atlas <- gsub("atlas-", str_extract(files[j], "atlas-[a-zA-Z0-9]+"))
task_list <- append(task, task_list)
direction_list <- append(direction, direction_list)
atlas_list <- append(atlas, atlas_list)
}
task_list
subject_list <- list()
ptseries_filenames <- list()
task_list <- list()
direction_list <- list()
atlas_list <- list()
for (i in c(1:nrow(hcpd_demog))) {
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
for (j in c(1:length(files))){
task <- gsub("task-",str_extract(files[j], "task-[a-z]+"))
direction <- gsub("dir-", str_extract(files[j], "dir-[A-Z]{2}"))
atlas <- gsub("atlas-", str_extract(files[j], "atlas-[a-zA-Z0-9]+"))
task_list <- append(task, task_list)
direction_list <- append(direction, direction_list)
atlas_list <- append(atlas, atlas_list)
}
subject_list <- append(subject, subject_list)
ptseries_filenames <- append(files, ptseries_filenames)
}
task
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
for (j in c(1:length(files))){
task <- gsub("task-",str_extract(files[j], "task-[a-z]+"))
direction <- gsub("dir-", str_extract(files[j], "dir-[A-Z]{2}"))
atlas <- gsub("atlas-", str_extract(files[j], "atlas-[a-zA-Z0-9]+"))
task_list <- append(task, task_list)
direction_list <- append(direction, direction_list)
atlas_list <- append(atlas, atlas_list)
}
task
gsub("task-",str_extract(files[j], "task-[a-z]+"))
str_extract(files[j], "task-[a-z]+")
files
files[j]
str_extract(files[j], "task-[a-z]+")
gsub("task-", str_extract(files[j], "task-[a-z]+"))
for (i in c(1:nrow(hcpd_demog))) {
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
for (j in c(1:length(files))){
task <- gsub("task-", "", str_extract(files[j], "task-[a-z]+"))
direction <- gsub("dir-", "", str_extract(files[j], "dir-[A-Z]{2}"))
atlas <- gsub("atlas-", "", str_extract(files[j], "atlas-[a-zA-Z0-9]+"))
task_list <- append(task, task_list)
direction_list <- append(direction, direction_list)
atlas_list <- append(atlas, atlas_list)
}
subject_list <- append(subject, subject_list)
ptseries_filenames <- append(files, ptseries_filenames)
}
ptseries_filenames
subject_list
for (i in c(1:nrow(hcpd_demog))) {
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
for (j in c(1:length(files))){
task <- gsub("task-", "", str_extract(files[j], "task-[a-z]+"))
direction <- gsub("dir-", "", str_extract(files[j], "dir-[A-Z]{2}"))
atlas <- gsub("atlas-", "", str_extract(files[j], "atlas-[a-zA-Z0-9]+"))
task_list <- append(task, task_list)
direction_list <- append(direction, direction_list)
atlas_list <- append(atlas, atlas_list)
print(paste(task, direction, atlas, "done"))
}
print(paste(subject, "done"))
subject_list <- append(subject, subject_list)
ptseries_filenames <- append(files, ptseries_filenames)
}
ptseries_filenamesDF <- as.data.frame(do.call(rbind, ptseries_filenames))
View(ptseries_filenamesDF)
ptseries_filenamesDF
ptseries_filenamesDF <- as.data.frame(do.call(rbind, ptseries_filenames))
subject_namesDF <- as.data.frame(do.call(rbind, subject_list))
direction_namesDF <- as.data.frame(do.call(rbind, direction_list))
atlas_namesDF <- as.data.frame(do.call(rbind, atlas_list))
dim(atlas_namesDF)
dim(atlas_namesDF)
dim(direction_namesDF)
652*36
dim(ptseries_filenamesDF)
dim(subject_namesDF)
for (i in c(1:nrow(hcpd_demog))) {
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
for (j in c(1:length(files))){
task <- gsub("task-", "", str_extract(files[j], "task-[a-z]+"))
direction <- gsub("dir-", "", str_extract(files[j], "dir-[A-Z]{2}"))
atlas <- gsub("atlas-", "", str_extract(files[j], "atlas-[a-zA-Z0-9]+"))
task_list <- append(task, task_list)
direction_list <- append(direction, direction_list)
atlas_list <- append(atlas, atlas_list)
subject_list <- append(subject[i], subject_list)
ptseries_filenames <- append(files[j], ptseries_filenames)
print(paste(task, direction, atlas))
}
print(paste(subject, "done"))
}
ptseries_filenamesDF <- as.data.frame(do.call(rbind, ptseries_filenames))
subject_namesDF <- as.data.frame(do.call(rbind, subject_list))
direction_namesDF <- as.data.frame(do.call(rbind, direction_list))
atlas_namesDF <- as.data.frame(do.call(rbind, atlas_list))
dim(ptseries_filenamesDF)
dim(subject_namesDF)
dim(direction_namesDF)
dim(atlas_namesDF)
dim(task_namesDF)
task_namesDF <- as.data.frame(do.call(rbind, task_list))
dim(task_namesDF)
subject_list <- list()
ptseries_filenames <- list()
task_list <- list()
direction_list <- list()
atlas_list <- list()
for (i in c(1:nrow(hcpd_demog))) {
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
for (j in c(1:length(files))){
task <- gsub("task-", "", str_extract(files[j], "task-[a-z]+"))
direction <- gsub("dir-", "", str_extract(files[j], "dir-[A-Z]{2}"))
atlas <- gsub("atlas-", "", str_extract(files[j], "atlas-[a-zA-Z0-9]+"))
task_list <- append(task, task_list)
direction_list <- append(direction, direction_list)
atlas_list <- append(atlas, atlas_list)
subject_list <- append(subject[i], subject_list)
ptseries_filenames <- append(files[j], ptseries_filenames)
print(paste(task, direction, atlas))
}
print(paste(subject, "done"))
}
which(str_detect(hcpd_demog$src_subject_id, "0245030"))
for (i in c(1:nrow(hcpd_demog[1:57]))) {
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
for (j in c(1:length(files))){
task <- gsub("task-", "", str_extract(files[j], "task-[a-z]+"))
direction <- gsub("dir-", "", str_extract(files[j], "dir-[A-Z]{2}"))
atlas <- gsub("atlas-", "", str_extract(files[j], "atlas-[a-zA-Z0-9]+"))
task_list <- append(task, task_list)
direction_list <- append(direction, direction_list)
atlas_list <- append(atlas, atlas_list)
subject_list <- append(subject[i], subject_list)
ptseries_filenames <- append(files[j], ptseries_filenames)
print(paste(task, direction, atlas))
}
print(paste(subject, "done"))
}
subject_list <- list()
ptseries_filenames <- list()
task_list <- list()
direction_list <- list()
atlas_list <- list()
for (i in c(1:nrow(hcpd_demog[1:57]))) {
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
for (j in c(1:length(files))){
task <- gsub("task-", "", str_extract(files[j], "task-[a-z]+"))
direction <- gsub("dir-", "", str_extract(files[j], "dir-[A-Z]{2}"))
atlas <- gsub("atlas-", "", str_extract(files[j], "atlas-[a-zA-Z0-9]+"))
task_list <- append(task, task_list)
direction_list <- append(direction, direction_list)
atlas_list <- append(atlas, atlas_list)
subject_list <- append(subject[i], subject_list)
ptseries_filenames <- append(files[j], ptseries_filenames)
print(paste(task, direction, atlas))
}
print(paste(subject, "done"))
}
subject_list <- list()
ptseries_filenames <- list()
task_list <- list()
direction_list <- list()
atlas_list <- list()
for (i in c(1:nrow(hcpd_demog[1:57,]))) {
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
for (j in c(1:length(files))){
task <- gsub("task-", "", str_extract(files[j], "task-[a-z]+"))
direction <- gsub("dir-", "", str_extract(files[j], "dir-[A-Z]{2}"))
atlas <- gsub("atlas-", "", str_extract(files[j], "atlas-[a-zA-Z0-9]+"))
task_list <- append(task, task_list)
direction_list <- append(direction, direction_list)
atlas_list <- append(atlas, atlas_list)
subject_list <- append(subject[i], subject_list)
ptseries_filenames <- append(files[j], ptseries_filenames)
print(paste(task, direction, atlas))
}
print(paste(subject, "done"))
}
ptseries_filenamesDF <- as.data.frame(do.call(rbind, ptseries_filenames))
subject_namesDF <- as.data.frame(do.call(rbind, subject_list))
task_namesDF <- as.data.frame(do.call(rbind, task_list))
direction_namesDF <- as.data.frame(do.call(rbind, direction_list))
atlas_namesDF <- as.data.frame(do.call(rbind, atlas_list))
dim(task_namesDF)
dim(ptseries_filenamesDF)
dim(subject_namesDF)
dim(task_namesDF)
dim(atlas_namesDF)
dim(direction_namesDF)
file_paths <- as.data.frame(cbind(subject_namesDF, task_namesDF, , direction_namesDF, atlas_namesDF, ptseries_filenamesDF))
file_paths <- as.data.frame(cbind(subject_namesDF, task_namesDF, direction_namesDF, atlas_namesDF, ptseries_filenamesDF))
file_paths
subject_namesDF
subject_list
subject_list <- list()
ptseries_filenames <- list()
task_list <- list()
direction_list <- list()
atlas_list <- list()
for (i in c(1:nrow(hcpd_demog[1:57,]))) {
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
for (j in c(1:length(files))){
task <- gsub("task-", "", str_extract(files[j], "task-[a-z]+"))
direction <- gsub("dir-", "", str_extract(files[j], "dir-[A-Z]{2}"))
atlas <- gsub("atlas-", "", str_extract(files[j], "atlas-[a-zA-Z0-9]+"))
task_list <- append(task, task_list)
direction_list <- append(direction, direction_list)
atlas_list <- append(atlas, atlas_list)
subject_list <- append(subject[i], subject_list)
ptseries_filenames <- append(files[j], ptseries_filenames)
print(paste(task, direction, atlas))
}
print(paste(subject, "done"))
}
subject_list <- list()
ptseries_filenames <- list()
task_list <- list()
direction_list <- list()
atlas_list <- list()
for (i in c(1:nrow(hcpd_demog[1:57,]))) {
subject <- paste0("sub-", str_extract(hcpd_demog$src_subject_id[i], "[0-9]+"))
files <- list.files(paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject))
for (j in c(1:length(files))){
task <- gsub("task-", "", str_extract(files[j], "task-[a-z]+"))
direction <- gsub("dir-", "", str_extract(files[j], "dir-[A-Z]{2}"))
atlas <- gsub("atlas-", "", str_extract(files[j], "atlas-[a-zA-Z0-9]+"))
task_list <- append(task, task_list)
direction_list <- append(direction, direction_list)
atlas_list <- append(atlas, atlas_list)
subject_list <- append(subject, subject_list)
ptseries_filenames <- append(files[j], ptseries_filenames)
print(paste(task, direction, atlas))
}
print(paste(subject, "done"))
}
ptseries_filenamesDF <- as.data.frame(do.call(rbind, ptseries_filenames))
subject_namesDF <- as.data.frame(do.call(rbind, subject_list))
task_namesDF <- as.data.frame(do.call(rbind, task_list))
direction_namesDF <- as.data.frame(do.call(rbind, direction_list))
atlas_namesDF <- as.data.frame(do.call(rbind, atlas_list))
file_paths <- as.data.frame(cbind(subject_namesDF, task_namesDF, direction_namesDF, atlas_namesDF, ptseries_filenamesDF))
file_paths
file_paths <- as.data.frame(cbind(subject_namesDF, task_namesDF, direction_namesDF, atlas_namesDF, ptseries_filenamesDF))
names(file_paths) <- c("subject", "task", "direction", "atlas", "filenames")
file_paths <- file_paths %>% mutate(path = paste0("/cbica/projects/network_replication/input/HCPD/hcpd_xcp/", subject, task, direction, atlas, filenames))
file_paths
library(dplyr)
library(tidyverse)
library(magrittr)
library(reshape)
library(reshape2)
library(MASS)
library(stargazer)
library(ggplot2)
library(ggpubr)
collated_NKI.xcp <- read.csv("/cbica/projects/network_replication/input/NKI/collated_NKI_xcpALL.csv")
demographics <- read.csv("/cbica/projects/network_replication/input/NKI/NKI_demographics_finalsample.csv")
demographics_filtered <- demographics$sub[c(which(demographics$age >4 & demographics$age <23))]
collated_NKI.xcp<- collated_NKI.xcp[c(which(collated_NKI.xcp$sub %in% demographics_filtered)),]
length(unique(collated_NKI.xcp$sub)) # 363 participants ages 5-22
nrow(collated_NKI.xcp) # 2274 scans
# Number of scans and participants excluded due to meanFD and T1
# t1_qc variable: 0=exclude based on T1 image quality. If T1 fails for one scan in a session, all scans from a given session will be excluded. 0 participants excluded;  137 scans excluded
# Exclude variable: 1=exclude based on mean_fd > 0.3. 0 additional participants excluded; 374 additional scans excluded
t1_exclusion <- collated_NKI.xcp[c(which(collated_NKI.xcp$t1_qc==0)), ]
t1_exclusion_sessions <- collated_NKI.xcp[c(which(collated_NKI.xcp$t1_qc==0)), c(2, 3)]
t1_exclusion_sessions <- t1_exclusion_sessions %>% mutate(sub_ses = paste0(sub, "_", ses))
collated_NKI.xcp <- collated_NKI.xcp %>% mutate(sub_ses =  paste0(sub, "_", ses))
t1_excluded <- collated_NKI.xcp[-c(which(collated_NKI.xcp$sub_ses %in% unique(t1_exclusion_sessions$sub_ses))),] # delete all the scans in a given session if T1 qc from that session fails
length(unique(collated_NKI.xcp$sub)) - length(unique(t1_excluded$sub)) # 0 participants excluded
nrow(collated_NKI.xcp) - nrow(t1_excluded) #  137 scans excluded
meanFD_exclusion <- t1_excluded[c(which(t1_excluded$Exclude==1)),]
meanFD_excluded <- t1_excluded[-c(which(t1_excluded$Exclude==1)),]
length(unique(t1_excluded$sub)) - length(unique(meanFD_excluded$sub)) # 0 additional participants excluded
nrow(meanFD_exclusion) # 374 scans excluded
collated_NKI.xcp_FINAL <- meanFD_excluded # first exclude all scans from a given session that fail T1. Then exclude by meanFD
casted_NKI.xcp <- dcast(collated_NKI.xcp_FINAL[,c(2:3)], sub~ses)
casted_NKI.xcp
which(casted_NKI.xcp$BAS1 == 0  & casted_NKI.xcp$BAS2 > 0)
casted_NKI.xcp
which(casted_NKI.xcp$BAS1 == 0  & casted_NKI.xcp$FLU1 > 0)
which(casted_NKI.xcp$BAS1 == 0  & casted_NKI.xcp$FLU2 > 0)
which(casted_NKI.xcp$BAS1 < 3  & casted_NKI.xcp$BAS2 > 0)
which(casted_NKI.xcp$BAS1 < 3)
NKI_qc_filenames_atlases  <- readRDS("/cbica/projects/network_replication/input/NKI/NKI_qc_CIFTI_filepaths_20221213.RData")
NKI_qc_filenames_atlases
demographics <- read.csv("/cbica/projects/network_replication/input/NKI/NKI_demographics_finalsample.csv")
# creates NKI_qc_filenames_atlases, which includes only BAS1 or FLU1 sessions in runs that pass QC
## df includes filenames and paths to the cifti file
collated_NKI.xcp_FINAL <- read.csv("/cbica/projects/network_replication/input/NKI/collated_NKI_QC_excluded_20221215.csv")
NKI_qc <- NKI_qc[, -c(which(names(NKI_qc) == "X.1"| names(NKI_qc) == "X" | names(NKI_qc) == "relMaxRMSMotion" | names(NKI_qc) == "meanDVInit" | names(NKI_qc) == "meanDVFinal" | names(NKI_qc) == "nVolCensored" | names(NKI_qc) == "nVolsRemoved" | names(NKI_qc) == "motionDVCorrInit" |names(NKI_qc) == "motionDVCorrFinal" |names(NKI_qc) == "Exclude"))]
NKI_qc <- NKI_qc[, -c(which(names(NKI_qc) == "X.1"| names(NKI_qc) == "X" | names(NKI_qc) == "relMaxRMSMotion" | names(NKI_qc) == "meanDVInit" | names(NKI_qc) == "meanDVFinal" | names(NKI_qc) == "nVolCensored" | names(NKI_qc) == "nVolsRemoved" | names(NKI_qc) == "motionDVCorrInit" |names(NKI_qc) == "motionDVCorrFinal" |names(NKI_qc) == "Exclude"))]
NKI_qc <- collated_NKI.xcp_FINAL
NKI_qc <- NKI_qc[, -c(which(names(NKI_qc) == "X.1"| names(NKI_qc) == "X" | names(NKI_qc) == "relMaxRMSMotion" | names(NKI_qc) == "meanDVInit" | names(NKI_qc) == "meanDVFinal" | names(NKI_qc) == "nVolCensored" | names(NKI_qc) == "nVolsRemoved" | names(NKI_qc) == "motionDVCorrInit" |names(NKI_qc) == "motionDVCorrFinal" |names(NKI_qc) == "Exclude"))]
# if there is BAS1 for subject, delete the FLU1 rows
bas1_NKI <- which(NKI_qc$sub %in% subs_BAS1$subject)
atlases <- c("Glasser", "Gordon", "Schaefer217", "Schaefer417")
NKI_qc <- NKI_qc[c(which(NKI_qc$sub %in% demographics$subject)),] # include only subjects in the final demographics df (ages 5-22)
ptseries_filenames <- list()
subject_names <- list()
subfolder_names <- list()
for (i in c(1:nrow(NKI_qc))) {
for(j in c(1:length(atlases))){
filename <- paste0("sub-", NKI_qc$sub[i], "_ses-", NKI_qc$ses[i], "_task-rest_acq-", NKI_qc$acq[i], "_space-fsLR_atlas-", atlases[j], "_den-91k_bold.ptseries.nii")
RBC_path <- paste0("/cbica/projects/network_replication/input/NKI/nki_xcp/")
subject <- paste0("sub-", NKI_qc$sub[i])
#subfolder <- paste0("/ses-",NKI_qc$ses[i],  "/func/" )
if(file.exists(paste0(RBC_path,"sub-", NKI_qc$sub[i], "/", filename))) {
ptseries_filenames <- append(ptseries_filenames, filename)
subject_names <- append(subject_names, subject)
#subfolder_names <- append(subfolder_names, subfolder)
print(paste(i, "/", nrow(NKI_qc), j))
} else {
print(paste("missing", filename))
}
}
}
ptseries_filenamesDF <- as.data.frame(do.call(rbind, ptseries_filenames))
subject_namesDF <- as.data.frame(do.call(rbind, subject_names))
file_paths <- as.data.frame(cbind(subject_namesDF, ptseries_filenamesDF))
names(file_paths) <- c("subject_namesDF", "ptseries_filenamesDF")
file_paths <- file_paths %>% mutate(path = paste0("/cbica/projects/network_replication/input/NKI/nki_xcp/", subject_namesDF, "/", ptseries_filenamesDF))
NKI_qc_filenames_atlases
View(subject_names)
NKI_qc_filenames_atlases
missing_BAS1 <- which(casted_NKI.xcp$BAS1 < 3) # these participants have fewer than 3 BAS1 scans. Want to look at their other scans
casted_NKI.xcp[missing_BAS1,]
read.csv("/cbica/projects/network_replication/input/NKI/NKI_demographics_finalsample_zipfiles.csv")
missing_BAS1
which(casted_NKI.xcp[missing_BAS1,]$FLU1 <3)
casted_NKI.xcp[missing_BAS1,]$FLU1
which(casted_NKI.xcp[missing_BAS1,]$BAS2 == 3)
which(casted_NKI.xcp[missing_BAS1,]$FLU2 == 3)
which(casted_NKI.xcp[missing_BAS1,]$TRT == 3)
which(casted_NKI.xcp[missing_BAS1,]$BAS2 == 3)
which(casted_NKI.xcp[missing_BAS1,]$FLU1 <3)
which(casted_NKI.xcp[missing_BAS1,]$FLU2 == 3)
which(casted_NKI.xcp[missing_BAS1,]$FLU1 <3)
intersect(which(casted_NKI.xcp[missing_BAS1,]$FLU2 == 3), which(casted_NKI.xcp[missing_BAS1,]$FLU2 == 3))
which(casted_NKI.xcp[missing_BAS1,]$FLU1 <3)
which(casted_NKI.xcp[missing_BAS1,]$FLU2 == 3)
setdiff(which(casted_NKI.xcp[missing_BAS1,]$FLU2 == 3) , which(casted_NKI.xcp[missing_BAS1,]$FLU1 <3))
setdiff(which(casted_NKI.xcp[missing_BAS1,]$TRT == 3) , which(casted_NKI.xcp[missing_BAS1,]$FLU1 <3))
# load participants
participants <- read.csv("/cbica/projects/network_replication/input/NKI/NKI_qc_avgRMS_20220921.csv")
# load NKI demographics information
demographics <- read.csv("/cbica/projects/network_replication/input/NKI/nki_demographics.csv")
demographics <- demographics[which(demographics$age >4 & demographics$age <23),c(1:4)]
demographics$sex <- as.factor(demographics$gender) #format sex variable
participants <- participants %>% relocate(subject, .after = last_col())
participants <- participants[, -1]
demographics <- merge(participants, demographics, by="subject") #get demographics for final study sample only via ID matching
#demographics <- demographics[-c(which(demographics$session == "BAS2" | demographics$session == "BAS3" | demographics$session == "TRT" |demographics$session == "FLU2" |demographics$session == "FLU3")),]
#bas1_NKI <- which(demographics$sub %in% subs_BAS1$subject)
#toDelete <- intersect(which(demographics$session == "FLU1"), bas1_NKI)
#demographics <- demographics[-c(toDelete),]
demographics <- demographics[!duplicated(demographics$subject),] # remove rows with duplicated subjects
names(demographics)[which(names(demographics) == "avg_relMeansRMSMotion")] <- "RMSmotion"
demographics <- demographics[, -c(which(names(demographics) == "session"))]
demographics <- demographics[, -c(which(names(demographics) == "gender"))]
#write.csv(demographics, "/cbica/projects/network_replication/input/NKI/NKI_demographics_finalsample.csv")
demographics_zipfiles <- demographics %>% mutate(zip_file = paste0("sub-", subject, "_ses-", ses, "_xcp-0-0-8.zip")) # to datalad get specific subject folders
#write.csv(demographics_zipfiles$zip_file, "/cbica/projects/network_replication/input/NKI/NKI_demographics_finalsample_zipfiles.csv", row.names = FALSE, quote=FALSE)
demographics_zipfiles
participants
#NKI_qc_filenames_atlases <- readRDS("/cbica/projects/network_replication/input/NKI/NKI_qc_CIFTI_filepaths_20221213.RData")
NKI_qc_filenames_atlases <- readRDS("/cbica/projects/network_replication/input/NKI/NKI_qc_CIFTI_filepaths_AllSessions_20221216.RData")
NKI_qc_filenames_atlases
library(dplyr)
library(tidyverse)
library(magrittr)
library(reshape)
library(reshape2)
library(MASS)
library(stargazer)
library(cifti)
library(ggplot2)
library(ggpubr)
length(list.files("/cbica/projects/network_replication/input/PNC/pnc_xcp")) # 950 as of 12/13 12:19PM; 970 as of 5:04PM; 1143 as of 12/15 1:19PM
length(list.files("/cbica/projects/network_replication/input/PNC/datalad_xcp")) # total 1565
length(list.files("/cbica/projects/network_replication/input/PNC/datalad_xcp")) # total 1565
subject_list <- list()
